#+ summary: Get all biodiversity-relation nanopublications
#+ method: GET
#+ pagination: 1000
#+ endpoint_in_url: False

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix np: <http://www.nanopub.org/nschema#>
prefix npa: <http://purl.org/nanopub/admin/>
prefix npx: <http://purl.org/nanopub/x/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix dct: <http://purl.org/dc/terms/>
prefix biolink: <https://w3id.org/biolink/vocab/>
prefix nt: <https://w3id.org/np/o/ntemplate/>
prefix biodiv: <https://w3id.org/kpxl/biodiv/terms/>
prefix prov: <http://www.w3.org/ns/prov#>

select distinct ?np ?label ?type (group_concat(distinct ?creator; separator = ", ") as ?creators) ?pubkey ?date ?provtlabel ?provsrc where {
  graph npa:graph {
    ?np npa:hasHeadGraph ?h .
    ?np dct:created ?date .
    ?np npa:hasValidSignatureForPublicKey ?pubkey .
  }
  graph ?h {
    ?np np:hasPublicationInfo ?i.
    ?np np:hasProvenance ?p.
    ?np np:hasAssertion ?a.
  }
  graph ?i {
    ?np dct:creator ?__creator_iri .
    bind(?__creator_iri as ?creator)
    ?np rdfs:label ?labelx .
    bind(str(?labelx) as ?label)
    ?np npx:hasNanopubType biodiv:BiodivNanopub .
    filter not exists { ?np a npx:ExampleNanopub . }
    ?np nt:wasCreatedFromProvenanceTemplate ?provtnp .
  }
  optional {
    graph ?p {
       ?a prov:wasDerivedFrom ?provsrc .
    }
  }
  optional {
    ?provtnp np:hasAssertion ?provt .
    ?provt rdfs:label ?provtlabelx .
    bind(str(?provtlabelx) as ?provtlabel)
  }
  optional {
    graph ?a {
      ?association a ?__type_iri .
      bind(?__type_iri as ?type)
    }
    graph ?i {
      ?np npx:introduces ?association .
    }
  }
  filter not exists {
    graph npa:graph {
      ?newversion npa:hasHeadGraph ?nh .
      ?newversion npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?nh {
      ?newversion np:hasPublicationInfo ?ni .
    }
    graph ?ni {
      ?newversion npx:supersedes ?np .
    }
  }
  filter not exists {
    graph npa:graph {
      ?retraction npa:hasHeadGraph ?rh .
      ?retraction npa:hasValidSignatureForPublicKey ?pubkey .
    }
    graph ?rh {
      ?retraction np:hasAssertion ?ra .
    }
    graph ?ra {
      ?somebody npx:retracts ?np .
    }
  }
}
group by ?np ?label ?type ?pubkey ?date ?provtlabel ?provsrc
order by desc(?date)
